/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    plants: Plant;
    seeds: Seed;
    dvrs: Dvr;
    nvrs: Nvr;
    products: Product;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    plants: PlantsSelect<false> | PlantsSelect<true>;
    seeds: SeedsSelect<false> | SeedsSelect<true>;
    dvrs: DvrsSelect<false> | DvrsSelect<true>;
    nvrs: NvrsSelect<false> | NvrsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plants".
 */
export interface Plant {
  id: string;
  name: string;
  scientificName?: string | null;
  careLevel?: ('Easy' | 'Medium' | 'Hard') | null;
  image?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seeds".
 */
export interface Seed {
  id: string;
  name: string;
  description?: string | null;
  plantType?: string | null;
  germinationTime?: number | null;
  image?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dvrs".
 */
export interface Dvr {
  id: string;
  title: string;
  slug: string;
  subTitle?: string | null;
  category?: string | null;
  imgCard?: (string | null) | Media;
  imgAlt?: string | null;
  thumbnails?:
    | {
        thumbnail?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  rating?: number | null;
  reviewCount?: number | null;
  specifications?:
    | {
        category: string;
        content?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nvrs".
 */
export interface Nvr {
  id: string;
  title: string;
  slug: string;
  subTitle?: string | null;
  category?: string | null;
  imgCard?: (string | null) | Media;
  imgAlt?: string | null;
  thumbnails?:
    | {
        thumbnail?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  rating?: number | null;
  reviewCount?: number | null;
  specifications?:
    | {
        category: string;
        content?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  slug: string;
  subTitle?: string | null;
  category: 'Network Products' | 'Turbo' | 'Access Control' | 'Display';
  subCategory?:
    | (
        | 'Network Cameras'
        | 'PTZ Cameras'
        | 'Network Video Recorder'
        | 'Server'
        | 'Explosion-Proof and Anti-Corrosion Series'
        | 'Storage'
        | 'Kits'
      )
    | null;
  ptzFields?: ('x' | 'y' | 'z' | 'q.w') | null;
  nvrFields?: ('a' | 'b' | 'c' | 'd' | 'e.w' | 'x' | 'd2') | null;
  series?:
    | (
        | 'Pro Series (All)'
        | 'Ultra Series (SmartIP)'
        | 'Value Series'
        | 'PanoVu Cameras'
        | 'Wi-Fi Series'
        | 'Special Series'
        | 'Solar-powered Series'
        | 'PT Series'
        | 'DeepinView Series'
      )
    | null;
  imgCard?: (string | null) | Media;
  imgAlt?: string | null;
  thumbnails?:
    | {
        thumbnail?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        feature?: string | null;
        id?: string | null;
      }[]
    | null;
  rating?: number | null;
  reviewCount?: number | null;
  specifications?:
    | {
        category: string;
        content?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'plants';
        value: string | Plant;
      } | null)
    | ({
        relationTo: 'seeds';
        value: string | Seed;
      } | null)
    | ({
        relationTo: 'dvrs';
        value: string | Dvr;
      } | null)
    | ({
        relationTo: 'nvrs';
        value: string | Nvr;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "plants_select".
 */
export interface PlantsSelect<T extends boolean = true> {
  name?: T;
  scientificName?: T;
  careLevel?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seeds_select".
 */
export interface SeedsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  plantType?: T;
  germinationTime?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dvrs_select".
 */
export interface DvrsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  subTitle?: T;
  category?: T;
  imgCard?: T;
  imgAlt?: T;
  thumbnails?:
    | T
    | {
        thumbnail?: T;
        id?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  rating?: T;
  reviewCount?: T;
  specifications?:
    | T
    | {
        category?: T;
        content?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nvrs_select".
 */
export interface NvrsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  subTitle?: T;
  category?: T;
  imgCard?: T;
  imgAlt?: T;
  thumbnails?:
    | T
    | {
        thumbnail?: T;
        id?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  rating?: T;
  reviewCount?: T;
  specifications?:
    | T
    | {
        category?: T;
        content?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  subTitle?: T;
  category?: T;
  subCategory?: T;
  ptzFields?: T;
  nvrFields?: T;
  series?: T;
  imgCard?: T;
  imgAlt?: T;
  thumbnails?:
    | T
    | {
        thumbnail?: T;
        id?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  rating?: T;
  reviewCount?: T;
  specifications?:
    | T
    | {
        category?: T;
        content?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}